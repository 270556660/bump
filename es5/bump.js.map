{"version":3,"sources":["../es6/bump.js"],"names":[],"mappings":"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","file":"bump.js","sourcesContent":["class Bump {\n  constructor(renderingEngine = PIXI) {\n    if (renderingEngine === undefined) throw new Error(\"Please assign a rendering engine in the constructor before using pixiDust.js\"); \n\n    //Find out which rendering engine is being used (the default is Pixi)\n    this.renderer = \"\";\n\n    //If the `renderingEngine` is Pixi, set up Pixi object aliases\n    if (renderingEngine.ParticleContainer) {\n      this.renderer = \"pixi\";\n    }\n  }\n\n  addCollisionProperties(sprite) {\n\n    //Add properties to Pixi sprites\n    if (this.renderer === \"pixi\") {\n\n      Object.defineProperties(sprite, {\n        \"gx\": {\n          value: function(){return sprite.getGlobalPosition().x},\n          writable: true, enumerable: true, configurable: true\n        },\n        \"gy\": {\n          value: function(){return sprite.getGlobalPosition().y},\n          writable: true, enumerable: true, configurable: true\n        },\n        \"centerX\": {\n          value: function(){return sprite.x + sprite.width / 2},\n          writable: true, enumerable: true, configurable: true\n        },\n        \"centerY\": {\n          value: function(){return sprite.y + sprite.height / 2},\n          writable: true, enumerable: true, configurable: true\n        },\n        \"halfWidth\": {\n          value: function(){return sprite.width / 2},\n          writable: true, enumerable: true, configurable: true\n        },\n        \"halfHeight\": {\n          value: function(){return sprite.height / 2},\n          writable: true, enumerable: true, configurable: true\n        }\n      });\n    }\n\n    //Add a Boolean `_bumpPropertiesAdded` property to the sprite to flag it\n    //as having these new properties\n    sprite._bumpPropertiesAdded = true;\n  }\n\n  /*\n  hitTestRectangle\n  ----------------\n\n  Use it to find out if two rectangular sprites are touching.\n  Parameters: \n  a. A sprite object with `centerX`, `centerY`, `halfWidth` and `halfHeight` properties.\n  b. A sprite object with `centerX`, `centerY`, `halfWidth` and `halfHeight` properties.\n\n  */\n\n  hitTestRectangle(r1, r2, global = false) {\n\n    //Add collision properties\n    if (!r1._bumpPropertiesAdded) this.addCollisionProperties(r1); \n    if (!r2._bumpPropertiesAdded) this.addCollisionProperties(r1); \n\n    let hit, combinedHalfWidths, combinedHalfHeights, vx, vy;\n\n    //A variable to determine whether there's a collision\n    hit = false;\n\n    //Calculate the distance vector\n    if (global) {\n      vx = (r1.gx + r1.halfWidth) - (r2.gx + r2.halfWidth);\n      vy = (r1.gy + r1.halfHeight) - (r2.gy + r2.halfHeight);\n    } else {\n      vx = r1.centerX - r2.centerX;\n      vy = r1.centerY - r2.centerY;\n    }\n\n    //Figure out the combined half-widths and half-heights\n    combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n    combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n    //Check for a collision on the x axis\n    if (Math.abs(vx) < combinedHalfWidths) {\n\n      //A collision might be occuring. Check for a collision on the y axis\n      if (Math.abs(vy) < combinedHalfHeights) {\n\n        //There's definitely a collision happening\n        hit = true;\n      } else {\n\n        //There's no collision on the y axis\n        hit = false;\n      }\n    } else {\n\n      //There's no collision on the x axis\n      hit = false;\n    }\n\n    //`hit` will be either `true` or `false`\n    return hit;\n  }\n}\n"]}